{"version":3,"sources":["Context.js","withContext.js","components/CartItem.js","components/Notification.js","components/Cart.js","components/ProductItem.js","components/ProductList.js","App.js","index.js"],"names":["Context","React","createContext","withContext","WrappedComponent","props","Consumer","context","CartItem","cartItem","cartKey","product","amount","className","src","alt","shortDesc","style","textTransform","name","price","onClick","removeFromCart","Notification","message","cart","cartKeys","Object","keys","notify","length","map","key","clearCart","checkout","notification","ProductItem","stock","addToCart","id","products","index","APP","state","localStorage","setItem","JSON","stringify","setState","cartItemId","removeItem","a","orderList","entries","value","productId","productName","producPrice","productAmount","push","order","axios","post","response","console","log","data","status","get","then","setTimeout","notAvailable","filter","item","noproducts","s","getItem","parse","Provider","this","notifify","role","e","preventDefault","showMenu","to","marginLeft","exact","path","element","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1714d778.chunk.js","sourcesContent":["import React from \"react\";\nconst Context = React.createContext({});\n\nexport default Context;\n","import React from \"react\";\nimport Context from \"./Context\";\n\nconst withContext=WrappedComponent => {\n    const withHOC = props => {\n        return(\n            <Context.Consumer>\n                {context => <WrappedComponent {...props} context={context}/>}\n            </Context.Consumer>\n        );\n    };\n    return withHOC;\n};\n\n\nexport default withContext;\n","import React from \"react\";\n\nconst CartItem = props => {\n  const { cartItem, cartKey } = props;\n\n  const { product, amount } = cartItem;\n  return (\n    <div className=\" column is-half\">\n      <div className=\"box\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-64x64\">\n              <img\n                src=\"https://bulma.io/images/placeholders/128x128.png\"\n                alt={product.shortDesc}\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <b style={{ textTransform: \"capitalize\" }}>\n              {product.name}{\" \"}\n              <span className=\"tag is-primary\">${product.price}</span>\n            </b>\n            <div>{product.shortDesc}</div>\n            <small>{`${amount} in cart`}</small>\n          </div>\n          <div\n            className=\"media-right\"\n            onClick={() => props.removeFromCart(cartKey)}\n          >\n            <span className=\"delete is-large\"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CartItem;","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n  export default Notification;","// ./src/components/Cart.js\n\nimport React from \"react\";\nimport withContext from \"../withContext\";\nimport CartItem from \"./CartItem\";\nimport Notification from './Notification';\n\n\nconst Cart = props => {\n  const { cart } = props.context;\n  const cartKeys = Object.keys(cart || {});\n  return (\n    <>\n      <div className=\"hero is-primary\">\n        <div className=\"hero-body container\">\n          <h4 className=\"title\">My Cart</h4>\n        </div>\n      </div>\n      <br />\n      <div className=\"container\">\n      <Notification message={props.context.notify}/>\n        {cartKeys.length ? (\n          <div className=\"column columns is-multiline\">\n            {cartKeys.map(key => (\n              <CartItem\n                cartKey={key}\n                key={key}\n                cartItem={cart[key]}\n                removeFromCart={props.context.removeFromCart}\n              />\n            ))}\n            <div className=\"column is-12 is-clearfix\">\n              <br />\n              <div className=\"is-pulled-right\">\n                <button\n                  onClick={props.context.clearCart}\n                  className=\"button is-warning \"\n                >\n                  Clear cart\n                </button>{\" \"}\n                <button\n                  className=\"button is-success\"\n                  onClick={props.context.checkout}\n                >\n                  Checkout\n                </button>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"column\">\n            {/* <div className=\"title has-text-grey-light\">Order sent cuccesfully!</div> */}\n          </div>\n      \n        )}\n      </div>\n      <div className=\"title has-text-grey-light\">\n       <Notification message={props.context.notification} /> </div>\n\n  {/*     <div className=\"error\">\n        {props.context.notification}\n      </div> */}\n    </>\n  );\n};\n\nexport default withContext(Cart);","import React from \"react\";\n\nconst ProductItem = props => {\n  const { product } = props;\n  return (\n    <div className=\" column is-half\">\n      <div className=\"box\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-64x64\">\n              <img\n                src=\"https://bulma.io/images/placeholders/128x128.png\"\n                alt={product.shortDesc}\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <b style={{ textTransform: \"capitalize\" }}>\n              {product.name}{\" \"}\n              <span className=\"tag is-black\">${product.price}</span>\n            </b>\n            {/* <div>{product.shortDesc}</div> */}\n             <div></div>\n            {product.stock > 0 ? (\n              <small>{product.stock + \" Available\"}</small>\n            ) : (\n              <small className=\"has-text-danger\">Out Of Stock</small>\n            )}\n            <div className=\"is-clearfix\">\n            {product.stock > 0 ? (\n              <button\n                className=\"button is-small is-outlined is-primary   is-pulled-right\"\n\n                onClick={() =>\n                  props.addToCart({\n                    id: product.name,\n                    product,\n                    amount: 1\n                  })\n                }\n              >\n                Add to Cart\n              </button>\n                 ) : (\"\")}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductItem;","import React from \"react\";\nimport ProductItem from \"./ProductItem\";\nimport withContext from \"../withContext\";\n\n\nconst ProductList = props => {\n    const { products } = props.context;\n  \n    return (\n      <>\n        <div className=\"hero is-danger\">\n          <div className=\"hero-body container\">\n            <h4 className=\"title\">Our Products</h4>\n          </div>\n        </div>\n        <br />\n        <div className=\"container\">\n\n          <div className=\"column columns is-multiline\">\n            {products && products.length ? (\n              products.map((product, index) => (\n                <ProductItem\n                  product={product}\n                  key={index}\n                  addToCart={props.context.addToCart}\n                />\n              ))\n            ) : (\n              <div className=\"column\">\n                <span className=\"title has-text-grey-light\">\n                  No products found!\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  };\n  \n  export default withContext(ProductList);","import './App.css';\nimport React, {Component} from \"react\";\nimport axios from 'axios'\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Cart from './components/Cart';\nimport ProductList from './components/ProductList';\nimport Context from \"./Context\";\n\n\n\nexport default class APP extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      cart:{},\n      products:[],\n      notification:\"\"\n    };   \n  }\n\n  //Initiates the product list by getting producst from inventory service and set productstate also gets cartstate from localstore\n  async componentDidMount(){\n  //console.log(\"didmount\")\n  let cart = localStorage.getItem(\"cart\");\n  //TODO try catch\n  await axios.get('/api/products').then(response => {\n  const products= response.data \n  cart = cart? JSON.parse(cart) : {};\n  this.setState({ products:products, cart });\n}) \n  }\n\n//Adds product to shopping cart, saves state to localstore and to cart state\n  addToCart = cartItem => {\n    let cart = this.state.cart;\n    if (cart[cartItem.id]) {\n      cart[cartItem.id].amount += cartItem.amount;\n    } else {\n      cart[cartItem.id] = cartItem; \n    }\n    if (cart[cartItem.id].amount > cart[cartItem.id].product.stock) {\n      cart[cartItem.id].amount = cart[cartItem.id].product.stock;\n    }   \n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    this.setState({ cart });\n  };\n\n// removes item prom product cart\n  removeFromCart = cartItemId => {\n    let cart = this.state.cart;\n    delete cart[cartItemId];\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    this.setState({ cart });\n  };\n\n // clears whole product cart\n  clearCart = () => {\n    let cart = {};\n    localStorage.removeItem(\"cart\");\n    this.setState({ cart });\n  };\n\n// Places order or if product out of stock clears cart, updates products and notifies user\ncheckout = async () => {\n  const cart = this.state.cart;\n  const orderList =[]\n\n    for (const [key, value] of Object.entries(cart)) {\n      const productId = value.product.id\n      const productName = value.product.name\n      const producPrice = value.product.price\n      const productAmount = value.amount\n\n      orderList.push({  id:productId, name:productName, amount:productAmount,  price:producPrice})\n  }\n  const order= { \n    products:orderList\n  }\n  //console.log(\"Order to sent to service:\", order)\n  \n try {\n const response= await axios.post( '/api/orders', order)\n    console.log('post response data from or orderservise to front', response.data)\n  \n    if (response.data.status === \"OK\") {\n      console.log(\"POST status OK getting products from inventory..\")\n      try {\n      await axios.get('/api/products').then(response => {\n      console.log(\"response data, producst from invenrory after order\",response.data)\n      this.setState({ products:response.data });\n      console.log( \"state after ordering products\",  this.state.products);\n      this.clearCart();\n      this.setState({ notification:\"Thank you for your order,  Order sent succefully\"  });\n      setTimeout(() => {\n        this.setState({ notification:null });    \n      }, 5000)\n      })\n    } catch (error) {\n      console.log(\"something went wrong with getting products state after failed order\")\n      this.setState({ notification: \"Something went wrong, please refresh the page\" });\n      setTimeout(() => {\n        this.setState({ notification:null });    \n      }, 5000)\n    }   \n    }\n    \n   //If some products are not available, update product state, clear shopping cart and notify user to replace the order \n   if (response.data.status === \"NOT_OK\"){\n      //console.log(\"POST NOT OK, Tilaus ei onnistunut joitain tuotteita ei satavilla\")\n      const notAvailable = response.data.products.filter(item=> item.status===\"NOT_OK\") \n      //notAvailable.forEach(element => console.log(element.name));\n      const noproducts=notAvailable.map(s=>s.name)\n      this.setState({ notification: `OUT OF STOCK:  ${noproducts}   Please replace the order!!!!`});\n      setTimeout(() => {\n        this.setState({ notification:null });    \n      }, 15000)\n    \n//fetch the newest product state from inventory service\n  try {\n      await axios.get('/api/products').then(response => {\n        //console.log(\"resp data/orders from invenrory\",response.data)\n        this.setState({ products:response.data });\n        this.clearCart();\n      })\n      return response.data;\n\n    } catch (error) {\n      //console.log(\"something went wrong with getting products state after failed order\")\n      this.setState({ notification: \"Something went wrong, please refresh the page\" });\n      setTimeout(() => {\n        this.setState({ notification:null });    \n      }, 5000)\n   }   \n  }\n//   else{\n//   console.log(\"Tilaus ei onnistunu something went wrong\")\n//  }\n  console.log(\"reeeeee\",response.data)\n return response.data;\n\n} catch (error) {\n    this.setState({ notification: 'Something went wrong. Please replace the order!.' });\n    setTimeout(() => {\n      this.setState({ notification:null });    \n    }, 5000)\n } \n  }\n\n\nrender() {\n    return (\n      \n      <Context.Provider\n        value={{\n          ...this.state,\n          removeFromCart: this.removeFromCart,\n          addToCart: this.addToCart,\n          clearCart: this.clearCart,\n          checkout: this.checkout,\n          notifify:this.state.notification\n        }}\n      >\n        <Router >\n        <div className=\"App\">\n          <nav\n            className=\"navbar container\"\n            role=\"navigation\"\n            aria-label=\"main navigation\"\n          >\n            <div className=\"navbar-brand\">\n              <b className=\"navbar-item is-size-4\">Online store</b>\n            <label\n                role=\"button\"\n                className=\"navbar-burger burger\"\n                aria-label=\"menu\"\n                aria-expanded=\"false\"\n                data-target=\"navbarBasicExample\"\n                onClick={e => {\n                  e.preventDefault();\n                  this.setState({ showMenu: !this.state.showMenu });\n                }}\n              >\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n              </label> \n            </div>\n\n              <div className={`navbar-menu`}>\n                <Link to=\"/\" className=\"navbar-item\">\n                  Products\n                </Link>\n                <Link to=\"/cart\" className=\"navbar-item\">\n                  Cart\n                  <span\n                    className=\"tag is-primary\"\n                    style={{ marginLeft: \"5px\" }}\n                  >\n                    { Object.keys(this.state.cart).length }\n                  </span>\n                </Link>\n              </div>\n            </nav>\n            <Routes>\n              <Route exact path=\"/\" element={<ProductList/>} />\n              <Route exact path=\"/cart\" element={<Cart/>} />\n            </Routes>\n          </div>\n        </Router>\n      </Context.Provider>\n    );\n  }\n}\n\n\n/* const postOrder = async (order) => {\n  console.log('servise postOrder', order)\n  try {\n    const response = await axios.post(baseUrl, order)\n    return response.data\n  } catch (error) {\n    const status = error.response.status\n    if (status === 500) {\n      return { error: 'Unable to connect to server.' }\n    } else if (status === 400) {\n      return { error:'Username must be unique!' }\n    } else if (status === 401) {\n      return { error: 'Username or password is incorrect.' }\n    } else {\n      return { error: 'Unable to connect to server.' }\n    }\n  }\n} */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"bulma/css/bulma.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}